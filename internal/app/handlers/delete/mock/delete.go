// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/delete/delete.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/avGenie/url-shortener/internal/app/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockAllURLDeleter is a mock of AllURLDeleter interface.
type MockAllURLDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockAllURLDeleterMockRecorder
}

// MockAllURLDeleterMockRecorder is the mock recorder for MockAllURLDeleter.
type MockAllURLDeleterMockRecorder struct {
	mock *MockAllURLDeleter
}

// NewMockAllURLDeleter creates a new mock instance.
func NewMockAllURLDeleter(ctrl *gomock.Controller) *MockAllURLDeleter {
	mock := &MockAllURLDeleter{ctrl: ctrl}
	mock.recorder = &MockAllURLDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAllURLDeleter) EXPECT() *MockAllURLDeleterMockRecorder {
	return m.recorder
}

// DeleteBatchURL mocks base method.
func (m *MockAllURLDeleter) DeleteBatchURL(ctx context.Context, urls entity.DeletedURLBatch) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBatchURL", ctx, urls)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBatchURL indicates an expected call of DeleteBatchURL.
func (mr *MockAllURLDeleterMockRecorder) DeleteBatchURL(ctx, urls interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBatchURL", reflect.TypeOf((*MockAllURLDeleter)(nil).DeleteBatchURL), ctx, urls)
}
